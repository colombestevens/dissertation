// Imports
var S2L2 = ee.ImageCollection("COPERNICUS/S2_SR"),
    capeHallet = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[170.1411625691457, -72.2944375714792],
          [170.1411625691457, -72.35281560826364],
          [170.34303634844258, -72.35281560826364],
          [170.34303634844258, -72.2944375714792]]], null, false),
    L8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2"),
    L82 = ee.ImageCollection("LANDSAT/LC08/C01/T2_TOA");
    
    // Script
    //summerfilter
var summer17 =ee.Filter.date('2017-12-01','2018-03-01');
var summer18 =ee.Filter.date('2018-12-01','2019-03-01');
var summer19 =ee.Filter.date('2019-12-01','2020-03-01');
var summer20 =ee.Filter.date('2020-12-01','2021-03-01');
var summerAll = ee.Filter.or(summer17, summer18, summer19, summer20); //combined summer filter

//pallette
var ndviparams = {
  bands: ['vegetation'],
  min: 0.1,
  max: 1,
  palette: ['00FF80', '006734'],
  };

//S2_L2 Image Search and Filter 

var L8Images = L82.filter(summer19).filterBounds(capeHallet).filterMetadata('CLOUD_COVER', 'less_than', 20);
  print ('Filtered Image Count L8: ', L8Images.size());

Map.addLayer(L8Images, {bands: ['B4', 'B3', 'B2']}, 'L8_images');

//NDVI 
var NDVI_B8_B4 = function(image) {
  var NDVI = image.normalizedDifference(['B5', 'B4']);
  return image.addBands(NDVI);
  };
var vegetation = L8Images.map(NDVI_B8_B4);

//GRVI

var GRVI_B3_B4 = function(image) {
  var GRVI = image.normalizedDifference(['B3', 'B4']);
  return image.addBands(GRVI);
};
var vegetation2 = vegetation.map(GRVI_B3_B4);


//threshold masking 

var thresh = function(image) {
  var ndviThreshold = image.where((image.select('nd').lt(0.2)).or(image.select('nd_1').lt(-0.1)),0);
  return image.updateMask(ndviThreshold);
  };
var threshmasking = vegetation2.map(thresh);

// ANNUAL GREENEST PIXEL COMPOSITES 
var greenestPixelComposite = threshmasking.reduce(ee.Reducer.max());
//Map.addLayer(greenestPixelComposite);

var ndvi = greenestPixelComposite.select('nd_max').rename('vegetation');
Map.addLayer(ndvi, ndviparams, 'NDVI');
